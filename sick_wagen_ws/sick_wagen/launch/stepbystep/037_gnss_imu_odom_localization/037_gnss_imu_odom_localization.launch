<?xml version="1.0"?>
<launch>

	<!-- xacro   -->
	<arg name="xacro_file" default="$(env SICK_WAGEN_XACRO)"/>
	<param name="robot_description" command="$(find xacro)/xacro $(find sick_wagen)/xacro/$(arg xacro_file)"/>
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
		<remap from="/joint_states" to="/whill/states/jointState" />
	</node>

	<!--  robot_localization  -->
	<!-- GPS to odometry -->
	<rosparam command="load" file="$(find sick_wagen)/config/robot_localization/whill_ekf_gnss_imu_odom.yaml" />
	<node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" respawn="true">
		<remap from="gps/fix" to="ublox/fix"/>
		<remap from="imu/data" to="wit/imu"/>
	</node>
	<!-- EKF -->
	<rosparam command="load" file="$(find sick_wagen)/config/robot_localization/whill_ekf_gnss_imu_odom.yaml" />
	<node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_node" clear_params="true">
		<!-- <remap from="odometry/gps" to="odom_gps"/> -->
		<!-- <remap from="odometry/filtered" to="odometry/filtered_map"/> -->
		<!-- written these in yaml ,sorry -->
	</node>

	<!-- just for evaluation -->
	<node pkg="tf2_ros" type="static_transform_publisher" name="my_static_transform" args="-72 -30 2 2.4 0 0 map odom_filtered" />
	
	<!-- x y z yaw pitch roll frame_id child_frame_id -->
	<arg name="map_pcd" default="$(env ROS_3D_MAP)"/>
	<node pkg="pcl_ros" type="pcd_to_pointcloud" name="pcd_to_pointcloud" args="$(arg map_pcd)">
		<param name="frame_id" type="string" value="map" />
		<param name="latch" type="bool" value="True" />
		<remap from="cloud_pcd" to="mapcloud" />
	</node>

	<!--  Joy stick  -->
	<node name="joy_node" pkg="joy" type="joy_node" args="_dev:=/dev/input/js0"/>

	<!-- ros whill   -->
	<node pkg="ros_whill" type="ros_whill" name="whill" output="screen">
		<rosparam file="$(find ros_whill)/params/initial_speedprofile.yaml" command="load" />
		<param name="keep_connected" value="true" />
		<!-- Serial Device name -->
		<param name="serialport" value="/dev/ttyUSB-WHILL"/>
		<!-- Output Odometry tf or not. If other node publishes odom->base_link tf, Change value to "false" -->
		<param name="publish_tf" value="false"/>
	</node>

	<!--  command vel controller  -->
	<node name="wagen_controller" pkg="sick_wagen" type="wagen_controller" output="screen">
		<remap from="cmd_vel" to="/whill/controller/cmd_vel"/>
	</node>t

	<!--  GPS -->
	<node pkg="ublox_gps" type="ublox_gps" name="ublox" output="screen" clear_params="false" respawn="true" respawn_delay="30">
		<rosparam command="load" file="$(find sick_wagen)/config/ublox_gps/zed_f9p_whill.yaml" />
		<param name="device" type="string" value="/dev/ttyACM-UBLOX" />
		<param name="frame_id" type="string" value="gps_link" />
	</node>

	<!-- imu -->
	<node pkg="nodelet" type="nodelet" output="screen" name="wit_nodelet_manager" args="manager" />
	<node pkg="nodelet" type="nodelet" output="screen" name="wit" args="load wit_node/WitNodelet wit_nodelet_manager">
		<param name="port" value="/dev/ttyUSB-WT901C" />
		<remap from="/imu" to="/wit/imu" />
	</node>

	<!--  LiDAR   -->
	<!--  multiScan   -->
	<arg name="udp_receiver_ip" default="$(env ROS_MASTER_PC_IP)" />
	<node name="multiScan" pkg="sick_scan" type="sick_generic_caller" respawn="false" output="screen" required="true">
		<param name="scanner_type" type="string" value="sick_multiscan" />
		<!-- network settings: -->
		<param name="hostname" type="string" value="MULTISCAN_IP" />
		<param name="port" type="int" value="2115" />
		<param name="udp_receiver_ip" type="string" value="$(arg udp_receiver_ip)" />
		<param name="udp_sender" type="string" value="" />
		<param name="udp_port" type="int" value="2115" />
		<param name="publish_topic" type="string" value="/cloud" />
		<param name="publish_topic_all_segments" type="string" value="/cloud_360" />
		<param name="segment_count" type="int" value="12" />
		<param name="publish_frame_id" type="string" value="multiscan_link" />
		<param name="udp_input_fifolength" type="int" value="20" />
		<param name="msgpack_output_fifolength" type="int" value="20" />
		<param name="verbose_level" type="int" value="0" />
		<!-- verbose_level <= 0: quiet mode, verbose_level == 1: print statistics, verbose_level == 2: print details incl. msgpack data, default: 1 -->
		<param name="measure_timing" type="bool" value="True" />
		<param name="export_csv" type="bool" value="False" />
		<param name="export_udp_msg" type="bool" value="False" />
		<param name="logfolder" type="string" value="" />
		<param name="send_udp_start" type="bool" value="False" />
		<param name="send_udp_start_string" type="string" value="magicalActivate" />
		<param name="udp_timeout_ms" type="int" value="60000" />
		<param name="range_min" type="double" value="0.6" />
		<param name="range_max" type="double" value="100.0" />
		<param name="range_filter_handling" type="int" value="0" />
		<param name="add_transform_xyz_rpy" type="string" value="0,0,0,3.14,0,0" />
		<param name="add_transform_check_dynamic_updates" type="bool" value="false" />
		<!-- SOPAS settings: -->
		<param name="sopas_tcp_port" type="string" value="2111" />
		<param name="start_sopas_service" type="bool" value="True" />
		<param name="send_sopas_start_stop_cmd" type="bool" value="True" />
		<param name="sopas_cola_binary" type="bool" value="False" />
		<param name="sopas_timeout_ms" type="int" value="5000" />
		<param name="client_authorization_pw" type="string" value="F4724744" />
		<!-- MSR100 filter settings -->
		<param name="host_read_filtersettings" type="bool" value="True" />
		<param name="host_FREchoFilter" type="int" value="0" />
		<param name="host_set_FREchoFilter" type="bool" value="False" />
		<param name="host_LFPangleRangeFilter" type="string" value="0 -180.0 +179.0 -90.0 +90.0 1" />
		<param name="host_set_LFPangleRangeFilter" type="bool" value="False" />
		<param name="host_LFPlayerFilter" type="string" value="0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" />
		<param name="host_set_LFPlayerFilter" type="bool" value="False" />
		<!-- Msgpack validation -->
		<param name="msgpack_validator_enabled" type="bool" value="False" />
		<param name="msgpack_validator_verbose" type="int" value="1" />
		<param name="msgpack_validator_discard_msgpacks_out_of_bounds" type="bool" value="True" />
		<param name="msgpack_validator_check_missing_scandata_interval" type="int" value="12" />
		<param name="msgpack_validator_required_echos" type="string" value="0" />
		<param name="msgpack_validator_azimuth_start" type="double" value="-180.0" />
		<param name="msgpack_validator_azimuth_end" type="double" value="+180.0" />
		<param name="msgpack_validator_elevation_start" type="double" value="-90.0" />
		<param name="msgpack_validator_elevation_end" type="double" value="+90.0" />
		<param name="msgpack_validator_valid_segments" type="string" value="0 1 2 3 4 5 6 7 8 9 10 11" />
		<param name="msgpack_validator_layer_filter" type="string" value="1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1" />
		<param name="ros_qos" type="int" value="-1" />
		<param name="laserscan_layer_filter" type="string" value="0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0" />
	</node>

	<!--  Two 2D LiDAR  -->
	<group ns="tim_scans">
		<node name="sick_tim_R" pkg="sick_scan" type="sick_generic_caller" respawn="false" output="screen">
			<param name="scanner_type" type="string" value="sick_tim_5xx" />
			<!-- -135째 -->
			<param name="min_ang" type="double" value="-1.832595715" />
			<!-- 135째 -->
			<param name="max_ang" type="double" value="1.832595715" />
			<param name="use_binary_protocol" type="bool" value="true" />
			<param name="range_max" type="double" value="100.0" />
			<param name="intensity" type="bool" value="True" />
			<param name="hostname" type="string" value="TIM_RIGHT_IP" />
			<param name="cloud_topic" type="string" value="tim_cloud_R" />
			<param name="frame_id" type="str" value="tim_link_R" />
			<param name="port" type="string" value="2112" />
			<param name="timelimit" type="int" value="5" />
			<param name="sw_pll_only_publish" type="bool" value="true" />
			<param name="min_intensity" type="double" value="0.0" />
			<remap from="/sick_tim_5xx/scan" to="tim_scan_R" />
		</node>
		<node name="sick_tim_L" pkg="sick_scan" type="sick_generic_caller" respawn="false" output="screen">
			<param name="scanner_type" type="string" value="sick_tim_5xx" />
			<!-- -135째 -->
			<param name="min_ang" type="double" value="-1.832595715" />
			<!-- 135째 -->
			<param name="max_ang" type="double" value="1.832595715" />
			<param name="use_binary_protocol" type="bool" value="true" />
			<param name="range_max" type="double" value="100.0" />
			<param name="intensity" type="bool" value="True" />
			<param name="hostname" type="string" value="TIM_LEFT_IP" />
			<param name="cloud_topic" type="string" value="tim_cloud_L" />
			<param name="frame_id" type="str" value="tim_link_L" />
			<param name="port" type="string" value="2112" />
			<param name="timelimit" type="int" value="5" />
			<param name="sw_pll_only_publish" type="bool" value="true" />
			<param name="min_intensity" type="double" value="0.0" />
			<remap from="/sick_tim_5xx/scan" to="tim_scan_L" />
		</node>
	</group>

	<arg name="node_start_delay" default="5.0" />
	<node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@'">
		<param name="destination_frame" value="laser_link" />
		<param name="cloud_destination_topic" value="/merged_cloud" />
		<param name="scan_destination_topic" value="/tim_scan" />
		<param name="laserscan_topics" value="/tim_scans/tim_scan_R /tim_scans/tim_scan_L" />
		<!-- LIST OF THE LASER SCAN TOPICS TO SUBSCRIBE -->
		<param name="angle_min" value="-3.14159265" />
		<param name="angle_max" value="3.14159265" />
		<param name="angle_increment" value="0.004363323" />
		<param name="scan_time" value="0.02" />
		<param name="range_min" value="0.2" />
		<param name="range_max" value="60.0" />
	</node>

	<!-- pointcloud_format_convert-->
	<node name="pointconverter_multiscan" pkg="sick_wagen" type="subscriber_multiscan.py"
		output="screen">
		<remap from="/pointcloud" to="/cloud_360" />
		<remap from="/pointcloud_out" to="/multiscan_xyz" />
	</node>
	<!-- Launch PointCloud2 concatenator node -->
	<node pkg="pointcloud_concatenate" type="pointcloud_concatenate_node" name="pc_concat"
		output="screen">
		<param name="target_frame" value="base_link" />	
		<param name="clouds" value="2" />
		<param name="hz" value="15" />
		<remap from="cloud_in1" to="/multiscan_xyz" />
		<remap from="cloud_in2" to="/merged_cloud" />
		<!-- <remap from="cloud_in4" to="" /> -->
		<remap from="cloud_out" to="/cloud_concatenated" />
	</node>

	<node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find sick_wagen)/launch/stepbystep/037_gnss_imu_odom_localization/037.rviz" />
</launch>
